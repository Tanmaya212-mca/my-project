<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interactive Quiz</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
      body {
        font-family: 'Inter', sans-serif;
      }
      .quiz-container {
        max-width: 600px;
        margin: auto;
        padding: 2rem;
        background-color:lightblue;
        border-radius: 0.5rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      }
      .question {
        font-size: 1.25rem;
        font-weight: 500;
        margin-bottom: 1rem;
        color: #333;
      }
      .options {
        display: flex;
        flex-direction: column;
        margin-bottom: 1rem;
      }
      .option {
        padding: 0.75rem;
        margin-bottom: 0.5rem;
        background-color: #e2e8f0;
        border-radius: 0.375rem;
        cursor: pointer;
        transition: background-color 0.2s ease;
        border: 1px solid #cbd5e0;
      }
      .option:hover {
        background-color: #d1d8e3;
      }
      .option.correct {
        background-color: #d4edda;
        border-color: #c3e6cb;
        color: #155724;
      }
      .option.incorrect {
        background-color: #f8d7da;
        border-color: #f5c6cb;
        color: #721c24;
      }
      .feedback {
        margin-top: 1rem;
        padding: 1rem;
        border-radius: 0.375rem;
        text-align: center;
        font-weight: 500;
      }
      .feedback.correct {
        background-color: #d4edda;
        border-color: #c3e6cb;
        color: #155724;
      }
      .feedback.incorrect {
        background-color: #f8d7da;
        border-color: #f5c6cb;
        color: #721c24;
      }
      .controls {
        display: flex;
        justify-content: center;
        margin-top: 1rem;
      }
      .button {
        padding: 0.75rem 1.5rem;
        border-radius: 0.375rem;
        background-color: #4f46e5;
        color: white;
        cursor: pointer;
        transition: background-color 0.2s ease;
        font-weight: 600;
        border: none;
      }
      .button:hover {
        background-color: #4338ca;
      }
      .button.restart {
        background-color: #3b82f6;
        margin-left: 0.5rem;
      }
      .button.restart:hover {
        background-color: #2563eb;
      }
      .hide {
        display: none;
      }
      .disabled {
        opacity: 0.5;
        cursor: not-allowed;
      }
    </style>
</head>
<body class="bg-gray-100" background="C:\Users\Charan\Downloads\apex.jpg">
    <div class="quiz-container">
        <h1 class="text-2xl font-semibold mb-4 text-center text-gray-800">Quiz Time!</h1>
        <div id="question-container" class="question"></div>
        <div id="options-container" class="options"></div>
        <div id="feedback" class="feedback hide"></div>
        <div class="controls">
            <button id="next-button" class="button" disabled>Next</button>
            <button id="restart-button" class="button restart hide">Restart</button>
        </div>
    </div>

    <script>
      const quizData = [
        {
          question: "What is the capital of France?",
          options: ["London", "Paris", "Berlin", "Rome"],
          correctAnswer: "Paris",
        },
        {
          question: "What is the highest mountain in the world?",
          options: ["K2", "Kangchenjunga", "Mount Everest", "Lhotse"],
          correctAnswer: "Mount Everest",
        },
        {
          question: "What is the chemical symbol for gold?",
          options: ["Au", "Ag", "Fe", "Cu"],
          correctAnswer: "Au",
        },
      ];

      const questionContainer = document.getElementById("question-container");
      const optionsContainer = document.getElementById("options-container");
      const feedback = document.getElementById("feedback");
      const nextButton = document.getElementById("next-button");
      const restartButton = document.getElementById("restart-button");

      let currentQuestionIndex = 0;
      let score = 0;
      let userAnswers = [];
      let isAnswerSelected = false;

      function displayQuestion() {
        const currentQuestion = quizData[currentQuestionIndex];
        questionContainer.textContent = currentQuestion.question;
        optionsContainer.innerHTML = "";
        feedback.className = "feedback hide";
        nextButton.classList.add("disabled");
        nextButton.disabled = true;
        isAnswerSelected = false;

        currentQuestion.options.forEach((option) => {
          const optionElement = document.createElement("div");
          optionElement.classList.add("option");
          optionElement.textContent = option;
          optionElement.addEventListener("click", () => handleOptionSelect(option));
          optionsContainer.appendChild(optionElement);
        });
      }

      function handleOptionSelect(selectedOption) {
        if (isAnswerSelected) return;

        isAnswerSelected = true;
        const currentQuestion = quizData[currentQuestionIndex];
        const correctOption = currentQuestion.correctAnswer;
        const options = optionsContainer.querySelectorAll(".option");

        userAnswers[currentQuestionIndex] = selectedOption;

        options.forEach((optionElement) => {
          const optionText = optionElement.textContent;
          if (optionText === correctOption) {
            optionElement.classList.add("correct");
          } else if (optionText === selectedOption) {
            optionElement.classList.add("incorrect");
          }
        });

        if (selectedOption === correctOption) {
          score++;
          feedback.classList.remove("hide");
          feedback.classList.add("correct");
          feedback.textContent = "Correct!";
        } else {
          feedback.classList.remove("hide");
          feedback.classList.add("incorrect");
          feedback.textContent = "Incorrect!";
        }

        nextButton.classList.remove("disabled");
        nextButton.disabled = false;
      }

      function handleNextQuestion() {
        if (!isAnswerSelected) return;

        currentQuestionIndex++;

        if (currentQuestionIndex < quizData.length) {
          displayQuestion();
        } else {
          displayResult();
        }
      }

      function displayResult() {
        questionContainer.classList.add("hide");
        optionsContainer.classList.add("hide");
        nextButton.classList.add("hide");
        restartButton.classList.remove("hide");

        const percentage = (score / quizData.length) * 100;
        let message = `You scored ${score} out of ${quizData.length}. (${percentage.toFixed(2)}%) `;
        if (percentage === 100) {
            message += "Perfect score!";
        }
        else if (percentage >= 80) {
            message += "Well done!";
        }
        else if (percentage >= 60) {
            message += "Good job!";
        }
        else {
            message += "Try again.";
        }
        feedback.textContent = message;
        feedback.classList.remove("hide");
        feedback.className = "feedback";
      }

      function restartQuiz() {
        currentQuestionIndex = 0;
        score = 0;
        userAnswers = [];
        questionContainer.classList.remove("hide");
        optionsContainer.classList.remove("hide");
        nextButton.classList.remove("hide");
        restartButton.classList.add("hide");
        displayQuestion();
      }

      nextButton.addEventListener("click", handleNextQuestion);
      restartButton.addEventListener("click", restartQuiz);

      displayQuestion();
    </script>
</body>
</html>
